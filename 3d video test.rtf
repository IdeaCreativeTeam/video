{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>Product Launch 3D Animation</title>\
    <style>\
        body, html \{\
            margin: 0;\
            padding: 0;\
            overflow: hidden;\
            background-color: #000;\
        \}\
\
        #canvas-container \{\
            width: 100vw;\
            height: 100vh;\
            display: flex;\
            justify-content: center;\
            align-items: center;\
            position: relative;\
        \}\
\
        #text-overlay \{\
            position: absolute;\
            top: 20%;\
            width: 100%;\
            text-align: center;\
            color: white;\
            font-size: 2em;\
            font-weight: bold;\
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.7);\
            opacity: 0;\
            transition: opacity 1s ease-in-out;\
        \}\
    </style>\
</head>\
\
<body>\
    <div id="canvas-container">\
        <div id="text-overlay">Introducing Our Latest Innovation</div>\
    </div>\
    <script src="https://cdn.jsdelivr.net/npm/three@0.136.0/build/three.min.js"></script>\
    <script src="https://cdn.jsdelivr.net/npm/three@0.136.0/examples/js/loaders/GLTFLoader.js"></script>\
    <script>\
        let scene, camera, renderer, model, directionalLight;\
        const canvasContainer = document.getElementById('canvas-container');\
        const overlayText = document.getElementById('text-overlay');\
\
        init();\
        animate();\
\
        function init() \{\
            scene = new THREE.Scene();\
\
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\
            camera.position.set(0, 0, 5);\
\
            renderer = new THREE.WebGLRenderer(\{ antialias: true, alpha: true \});\
            renderer.setSize(window.innerWidth, window.innerHeight);\
            renderer.setPixelRatio(window.devicePixelRatio);\
            renderer.shadowMap.enabled = true;\
            canvasContainer.appendChild(renderer.domElement);\
\
            const ambientLight = new THREE.AmbientLight(0x404040, 3);\
            scene.add(ambientLight);\
\
            directionalLight = new THREE.DirectionalLight(0xffffff, 2);\
            directionalLight.position.set(5, 10, 7.5);\
            directionalLight.castShadow = true;\
            scene.add(directionalLight);\
\
            const loader = new THREE.GLTFLoader();\
            loader.load('https://cdn.jsdelivr.net/gh/KhronosGroup/glTF-Sample-Models/2.0/DamagedHelmet/glTF/DamagedHelmet.gltf', function (gltf) \{\
                model = gltf.scene;\
                model.scale.set(1.5, 1.5, 1.5);\
                scene.add(model);\
            \});\
\
            window.addEventListener('resize', onWindowResize, false);\
        \}\
\
        function onWindowResize() \{\
            camera.aspect = window.innerWidth / window.innerHeight;\
            camera.updateProjectionMatrix();\
            renderer.setSize(window.innerWidth, window.innerHeight);\
        \}\
\
        function animate() \{\
            requestAnimationFrame(animate);\
\
            if (model) \{\
                model.rotation.y += 0.01;\
            \}\
\
            if (camera.position.z > 2) \{\
                camera.position.z -= 0.02;\
            \} else \{\
                overlayText.style.opacity = 1;\
            \}\
\
            renderer.render(scene, camera);\
        \}\
    </script>\
</body>\
\
</html>\
}